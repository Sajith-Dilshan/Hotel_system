
//import java.lang.System.Logger;
//import java.lang.System.Logger.Level;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.Date;
import java.text.SimpleDateFormat;



import java.awt.Color;//
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;//
import javax.swing.JOptionPane;
import javax.swing.border.Border;//
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sajith
 */
public class ManageReservationsForm extends javax.swing.JFrame {
    RESERVATIONS reservation = new RESERVATIONS();
    /**
     * Creates new form ManageReservationsForm
     */
    public ManageReservationsForm() {
        initComponents();
        
        
         //populate the jtable
        
        
        reservation.fillReservationJTable(jTable1);
        
        
        //set height to jtable
        jTable1.setRowHeight(30);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonBack = new javax.swing.JButton();
        jTextField_ReservationId = new javax.swing.JTextField();
        jLabel_id = new javax.swing.JLabel();
        jTextField_ClientId = new javax.swing.JTextField();
        jLabel_clientId = new javax.swing.JLabel();
        jTextField_RoomNo = new javax.swing.JTextField();
        jLabel_RoomNo = new javax.swing.JLabel();
        jLabel_DateIn = new javax.swing.JLabel();
        jLabel_DateOut = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton_add = new javax.swing.JButton();
        jButton_edit = new javax.swing.JButton();
        jButton_remove = new javax.swing.JButton();
        jButton_clear = new javax.swing.JButton();
        jButton_Refresh = new javax.swing.JButton();
        jDateChooserDateIn = new com.toedter.calendar.JDateChooser();
        jDateChooserDateOut = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 0, 0));

        jPanel3.setBackground(new java.awt.Color(0, 102, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Manage Reservation");

        jButtonBack.setText("Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonBack)
                .addGap(242, 242, 242)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonBack)
                    .addComponent(jLabel1))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jLabel_id.setText("ID :");

        jLabel_clientId.setText("Client ID :");

        jLabel_RoomNo.setText("Room N0 :");

        jLabel_DateIn.setText("Date IN :");

        jLabel_DateOut.setText("Date Outl :");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reservation ID", "Client ID", "Room Number", "Date In", "Date Out"
            }
        )
        // make the jtable not editable
        {public boolean isCellEditable(int row, int column){return false;}}

    );
    jTable1.setGridColor(new java.awt.Color(255, 255, 0));
    jTable1.setSelectionBackground(new java.awt.Color(0, 204, 204));
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);

    jButton_add.setBackground(new java.awt.Color(255, 255, 0));
    jButton_add.setText("Add New ");
    jButton_add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButton_add.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton_addActionPerformed(evt);
        }
    });

    jButton_edit.setBackground(new java.awt.Color(255, 255, 0));
    jButton_edit.setText("Edit");
    jButton_edit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButton_edit.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton_editActionPerformed(evt);
        }
    });

    jButton_remove.setBackground(new java.awt.Color(255, 255, 0));
    jButton_remove.setText("Remove");
    jButton_remove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButton_remove.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton_removeActionPerformed(evt);
        }
    });

    jButton_clear.setBackground(new java.awt.Color(255, 51, 51));
    jButton_clear.setText("Clear Fields");
    jButton_clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButton_clear.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton_clearActionPerformed(evt);
        }
    });

    jButton_Refresh.setText("Refresh");
    jButton_Refresh.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton_RefreshActionPerformed(evt);
        }
    });

    jDateChooserDateIn.setDateFormatString("dd/MM/yyyy");

    jDateChooserDateOut.setDateFormatString("dd/MM/yyyy");

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addComponent(jButton_add, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(45, 45, 45)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel_id)
                                        .addComponent(jLabel_clientId)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel_RoomNo, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel_DateIn, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel_DateOut, javax.swing.GroupLayout.Alignment.TRAILING))))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField_ReservationId)
                                .addComponent(jTextField_ClientId)
                                .addComponent(jTextField_RoomNo, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                                .addComponent(jDateChooserDateIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jDateChooserDateOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(18, 18, 18)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jButton_Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(24, 24, 24))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextField_ReservationId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_id))
                    .addGap(20, 20, 20)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel_clientId)
                        .addComponent(jTextField_ClientId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextField_RoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_RoomNo))
                    .addGap(24, 24, 24)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel_DateIn)
                        .addComponent(jDateChooserDateIn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel_DateOut)
                        .addComponent(jDateChooserDateOut, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(107, 107, 107)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_add, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(30, 30, 30)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jButton_clear, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addComponent(jButton_Refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap(55, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // Display the selected row data in the jfields

        //get the jtable model
       DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        //get selected row index
       int rIndex = jTable1.getSelectedRow();

        //display data
       jTextField_ReservationId.setText(model.getValueAt(rIndex, 0).toString());
        jTextField_ClientId.setText(model.getValueAt(rIndex, 1).toString());
        jTextField_RoomNo.setText(model.getValueAt(rIndex, 2).toString());
      
        //display dateIn & dateOut form jTable
        
        try {
          //  java.util.Date dateIn;
           Date dateIn = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(rIndex, 3).toString());
            jDateChooserDateIn.setDate(dateIn);
            
            Date dateOut = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(rIndex, 4).toString());
            jDateChooserDateOut.setDate(dateOut);
            
            
        } catch (ParseException ex) {
            Logger.getLogger(ManageReservationsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addActionPerformed
        // add a new reservation 

        // get data frome the fields

      

        try {
            
            int Id = Integer.valueOf(jTextField_ReservationId.getText());
            int Client_Id = Integer.valueOf(jTextField_ClientId.getText());  
        int roomNumber = Integer.valueOf(jTextField_RoomNo.getText()); 
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String dateIn = dateFormat.format(jDateChooserDateIn.getDate());
        String dateOut = dateFormat.format(jDateChooserDateOut.getDate());
        String toDayDate = dateFormat.format(new Date());
        
        Date din = dateFormat.parse(dateIn);
        Date dout = dateFormat.parse(dateOut);
        Date tdd  = dateFormat.parse(toDayDate) ;
        
        
        if (!(din.after(tdd) || din.equals(tdd)))
        {
           JOptionPane.showMessageDialog(rootPane, "The Date in must be After or equal to Today date", "Date In Error", JOptionPane.ERROR_MESSAGE); 
        }
        //if the date out in before date in or not equal to date in
        else if(din.after(din) || din.before(din)){
        
        JOptionPane.showMessageDialog(rootPane, "The Date out must be After or equal to Date In", "Date Out Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
        
            if(reservation.addReservation(Id,Client_Id, roomNumber, dateIn, dateOut)){
                
                JOptionPane.showMessageDialog(rootPane, "New Reservation added succeesfully ", "Add Reservation", JOptionPane.INFORMATION_MESSAGE);
            }else
            {
                JOptionPane.showMessageDialog(rootPane, "New Reservation Not added", "Add Reservation", JOptionPane.ERROR_MESSAGE);
            }
        }
        
            
            
        } catch (Exception ex) {
           // Logger.getLogger(ManageReservationsForm.class.getName()).log(Level.SEVERE, null, ex);
            //JOptionPane.showMessageDialog(rootPane, ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            System.out.println(ex);
           JOptionPane.showMessageDialog(null, "please input a valid number");
        }

           

    }//GEN-LAST:event_jButton_addActionPerformed

    private void jButton_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_editActionPerformed
         // edit a client details

        int reservationId;
         int Client_Id;  
        int roomNumber;
         

            try {
                reservationId = Integer.valueOf(jTextField_ReservationId.getText());
                Client_Id = Integer.valueOf(jTextField_ClientId.getText());
                roomNumber = Integer.valueOf(jTextField_RoomNo.getText());
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String dateIn = dateFormat.format(jDateChooserDateIn.getDate());
                String dateOut = dateFormat.format(jDateChooserDateOut.getDate());
                
                
                String toDayDate = dateFormat.format(new Date());
        
                Date din = dateFormat.parse(dateIn);
                Date dout = dateFormat.parse(dateOut);
                Date tdd  = dateFormat.parse(toDayDate) ;
                
                
                
                if (!(din.after(tdd) || din.equals(tdd)))
        {
           JOptionPane.showMessageDialog(rootPane, "The Date in must be After or equal to Today date", "Date In Error", JOptionPane.ERROR_MESSAGE); 
        }
        //if the date out in before date in or not equal to date in
        else if(din.after(din) || din.before(din)){
        
        JOptionPane.showMessageDialog(rootPane, "The Date out must be After or equal to Date In", "Date Out Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
        
            if(reservation.editReservation(reservationId,Client_Id,roomNumber,dateIn,dateOut)){
                
                JOptionPane.showMessageDialog(rootPane, "Existing reservation data updated succeesfully ", "Update reservation", JOptionPane.INFORMATION_MESSAGE);
            }else
            {
                JOptionPane.showMessageDialog(rootPane, "Existing reservation data Not updated", "Update reservation", JOptionPane.ERROR_MESSAGE);
            }
        }
                
                
                
                
                ////////////////
                
          /*      if(reservation.editReservation(reservationId,Client_Id,roomNumber,dateIn,dateOut))
                {
                    
                    JOptionPane.showMessageDialog(rootPane, "Existing reservation data updated succeesfully ", "Update reservation", JOptionPane.INFORMATION_MESSAGE);
                }
                else{
                    JOptionPane.showMessageDialog(rootPane, "Existing reservation data Not updated", "Update reservation", JOptionPane.ERROR_MESSAGE);
                }*/
            } catch (SQLException ex) {
                Logger.getLogger(ManageClientForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
            Logger.getLogger(ManageReservationsForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        

    }//GEN-LAST:event_jButton_editActionPerformed

    private void jButton_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_removeActionPerformed

        int reservationId;
        reservationId = Integer.valueOf (jTextField_ReservationId.getText());
        if(reservation.removeReservation(reservationId))
        {
            
            JOptionPane.showMessageDialog(rootPane, "reservation data deleted succeesfully ", "Remove reservation", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "reservation data Not deleted", "Remove reservation", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton_removeActionPerformed

    private void jButton_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_clearActionPerformed
        //clear textfields

        jTextField_ReservationId.setText("");
        jTextField_ClientId.setText("");
        jTextField_RoomNo.setText("");
        //if you want to current date use this code
      //  jDateChooserDateIn.setDate(new Date());
      //  jDateChooserDateOut.setDate(new Date());
      
      
     //if you want to null ,use  this code 
      jDateChooserDateIn.setDate(null);
      jDateChooserDateOut.setDate(null);
        
        

    }//GEN-LAST:event_jButton_clearActionPerformed

    private void jButton_RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RefreshActionPerformed
        //clear the jlable first
        jTable1.setModel(new DefaultTableModel(null, new Object[]{"Reservation ID", "Client ID", "Room Number", "Date In", "Date Out"}));

        //populate the jtable
        reservation.fillReservationJTable(jTable1);
    }//GEN-LAST:event_jButton_RefreshActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        Mainform M = new Mainform();
                    M.setVisible(true);
                    M.pack();
                    M.setLocationRelativeTo(null);
                    this.dispose();
    }//GEN-LAST:event_jButtonBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageReservationsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageReservationsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageReservationsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageReservationsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageReservationsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButton_Refresh;
    private javax.swing.JButton jButton_add;
    private javax.swing.JButton jButton_clear;
    private javax.swing.JButton jButton_edit;
    private javax.swing.JButton jButton_remove;
    private com.toedter.calendar.JDateChooser jDateChooserDateIn;
    private com.toedter.calendar.JDateChooser jDateChooserDateOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_DateIn;
    private javax.swing.JLabel jLabel_DateOut;
    private javax.swing.JLabel jLabel_RoomNo;
    private javax.swing.JLabel jLabel_clientId;
    private javax.swing.JLabel jLabel_id;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField_ClientId;
    private javax.swing.JTextField jTextField_ReservationId;
    private javax.swing.JTextField jTextField_RoomNo;
    // End of variables declaration//GEN-END:variables
}
